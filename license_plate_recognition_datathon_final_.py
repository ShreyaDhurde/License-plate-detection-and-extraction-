# -*- coding: utf-8 -*-
"""license plate recognition datathon final .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IVeDqLbveq06EUGprRznnnZ3ctKr4Pr9
"""

!pip install opencv-python
!pip install matplotlib
!pip install numpy
!pip install imutils
!pip install easyocr
!pip install streamlit




import cv2
import matplotlib.pyplot as plt
import numpy as np
import imutils
import easyocr
import streamlit as st

import warnings

warnings.filterwarnings('ignore', category=DeprecationWarning)

import matplotlib.pyplot as plt
import seaborn as sns
import difflib

plate_cascade = cv2.CascadeClassifier('indian_license_plate.xml')

def detect_plate(img):
    plate_img = img.copy()
    roi = img.copy()
    plate_rect = plate_cascade.detectMultiScale(plate_img, scaleFactor=1.2, minNeighbors=7)
    for (x, y, w, h) in plate_rect:
        roi_ = roi[y:y+h, x:x+w, :]
        plate = roi[y:y+h, x:x+w, :]
        cv2.rectangle(plate_img, (x+2, y), (x+w-3, y+h-5), (51, 181, 155), 3)

    return plate_img, plate

def display(img_, title=''):
    img = cv2.cvtColor(img_, cv2.COLOR_BGR2RGB)
    plt.imshow(img)
    plt.axis('off')
    plt.title(title)

def display(img_, title=''):
    img = cv2.cvtColor(img_, cv2.COLOR_BGR2RGB)
    fig = plt.figure(figsize=(10,6))
    ax = plt.subplot(111)
    ax.imshow(img)
    plt.axis('off')
    plt.title(title)
    plt.show()

img = cv2.imread('/content/Cars198.png')
display(img, 'input image')

# Getting plate prom the processed image
output_img, plate = detect_plate(img)

display(output_img, 'detected license plate in the input image')

display(plate, 'extracted license plate from the image')

reader = easyocr.Reader(['en'])
result = reader.readtext(plate)
result[0]

license_Number  = result[0][1]
print(license_Number)

final_license = license_Number.replace("*", " ").upper()

print("The Possible Number plate for the image is :",final_license,)
display (img)

img = cv2.imread('/content/Cars198.png')
display(img, 'input image')

# prompt: I want you to give me the code in which I take input from the user and then compare it with final licence and I want you to give me the similarity or accuracy between these votes and later give me and show me the accuracy by the chart   Using matplotlib and seaborn dont use streamlit


def get_user_input():
  user_input = input("Enter the license plate number:")
  return user_input

def compare_and_show_accuracy(user_input, final_license):
  similarity = difflib.SequenceMatcher(None, user_input, final_license).ratio()
  accuracy = similarity * 100
  print("Similarity between user input and final license plate:", accuracy, "%")
  # Create a bar chart to visualize the accuracy
  fig, ax = plt.subplots()
  sns.barplot(x=['Accuracy'], y=[accuracy], palette='Set2')
  ax.set_xlabel("Metric")
  ax.set_ylabel("Percentage")
  plt.show()



user_input = get_user_input()

compare_and_show_accuracy(user_input, final_license)

